buildscript {
    repositories {
        jcenter()
        mavenCentral()
        // The following is only necessary if you want to use SNAPSHOT releases.
        // maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

version '1.0-SNAPSHOT'

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    maven {
        url "http://repo.hortonworks.com/content/repositories/releases/"
    }
}

//sourceSets {
//    main {
//        java.srcDirs = ["src/main/java"]
//    }
//    test {
//        java.srcDirs = ["src/test/java"]
//    }
//
//}

tasks.withType(Test) {
    testLogging {
        // Uncomment this if you want to see the console output from the tests.
        showStandardStreams = true
        events "passed", "skipped", "failed"
        // show standard out and standard error of the test JVM(s) on the console
        showStandardStreams = true
    }
}

dependencies {
    compile 'org.apache.hadoop:hadoop-mapreduce-client-core:2.8.2'
    compile 'org.apache.hadoop:hadoop-common:2.8.2'
    compile 'org.apache.hadoop:hadoop-hdfs:2.8.2'
    compile 'org.apache.hadoop:hadoop-yarn-common:2.8.2'
    compile 'org.apache.hadoop:hadoop-minicluster:2.8.2'
    compile 'org.apache.hadoop:hadoop-mapreduce-client-core:2.8.2'
    compile 'org.apache.hadoop:hadoop-mapreduce-client-jobclient:2.8.2'
    compile 'org.apache.hadoop:hadoop-mapreduce-client-app:2.8.2'
    compile 'org.apache.hadoop:hadoop-mapreduce-client-shuffle:2.8.2'
    compile 'org.apache.hadoop:hadoop-mapreduce-client-common:2.8.2'
    compile 'org.apache.hadoop:hadoop-client:2.8.2'
//    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.0.1"

    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.0.1'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.0.1'
    )

    // to run JUnit 3/4 tests:
//    testImplementation("junit:junit:4.12")
//    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.0")
}

build {
    doLast {
        configurations.shadow.each { println it.name }
    }
}

shadowJar {
    exclude 'META-INF/LICENSE'
}